@model SquadCrud.Models.Employee

@{
    ViewBag.Title = "Create";
    var departments = new List<SelectListItem>();
    departments.Add(new SelectListItem() { Text = "Asp .Net", Value = "Asp .Net" });
    departments.Add(new SelectListItem() { Text = "PHP", Value = "PHP" });
    departments.Add(new SelectListItem() { Text = "Java", Value = "Java" });

    var reportingPersons = new List<SelectListItem>();
    reportingPersons.Add(new SelectListItem() { Text = "Person1", Value = "1" });
    reportingPersons.Add(new SelectListItem() { Text = "Person2", Value = "2" });
    reportingPersons.Add(new SelectListItem() { Text = "Person3", Value = "3" });
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>EmployeePractical</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Designation, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="col-md-10">
                Jr. Developer
                @Html.RadioButtonFor(model => model.Designation, "Jr. Developer")
                Sr. Developer
                @Html.RadioButtonFor(model => model.Designation, "Sr. Developer")
                <br />
                Team Lead
                @Html.RadioButtonFor(model => model.Designation, "Team Lead")
                Project Lead
                @Html.RadioButtonFor(model => model.Designation, "Project Lead")
            </div>
            @Html.ValidationMessageFor(model => model.Designation, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Department, departments, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
            <label class="control-label col-md-2">Have Knowledge of</label>
            <div class="col-md-10">
                <label class="checkbox-inline">MVC</label>
                <label class="checkbox-inline">VB</label>
                <label class="checkbox-inline">SQL</label>
                <label class="checkbox-inline">Jquery</label>
                <label class="checkbox-inline">JavaScript</label>
                <label class="checkbox-inline">AngularJS</label>
                <label class="checkbox-inline">NodeJS</label>
            </div>
        </div>*@


    <div class="form-group">
        @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control", @type = "number" } })
            @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.JoiningDate, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.JoiningDate, new { htmlAttributes = new { @class = "form-control", @type = "date" } })
            @Html.ValidationMessageFor(model => model.JoiningDate, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ReportingPerson, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.ReportingPerson, reportingPersons, "--Select--", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ReportingPerson, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <br />
            <input type="submit" value="Create" class="btn btn-outline-success" /> |
            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-outline-primary" })
        </div>
    </div>
</div>
}


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
